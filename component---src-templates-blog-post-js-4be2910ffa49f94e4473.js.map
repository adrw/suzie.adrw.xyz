{"version":3,"sources":["webpack:///./src/components/Content.js","webpack:///./src/templates/blog-post.js"],"names":["HTMLContent","content","className","dangerouslySetInnerHTML","__html","Content","BlogPostTemplate","contentComponent","description","tags","title","helmet","PostContent","length","style","marginTop","map","tag","key","to","kebabCase","BlogPost","post","data","markdownRemark","html","frontmatter","titleTemplate","name","pageQuery"],"mappings":"2FAAA,2DAGaA,EAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACzB,yBAAKA,UAAWA,EAAWC,wBAAyB,CAAEC,OAAQH,MAcjDI,IAXC,SAAC,GAAD,IAAGJ,EAAH,EAAGA,QAASC,EAAZ,EAAYA,UAAZ,OACd,yBAAKA,UAAWA,GAAYD,K,kCCR9B,gMAQaK,EAAmB,SAAC,GAO1B,IANLL,EAMI,EANJA,QACAM,EAKI,EALJA,iBACAC,EAII,EAJJA,YACAC,EAGI,EAHJA,KACAC,EAEI,EAFJA,MACAC,EACI,EADJA,OAEMC,EAAcL,GAAoBF,IAExC,OACE,6BAASH,UAAU,WAChBS,GAAU,GACX,yBAAKT,UAAU,qBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,sDACXQ,GAEH,2BAAIF,GACJ,kBAACI,EAAD,CAAaX,QAASA,IACrBQ,GAAQA,EAAKI,OACZ,yBAAKC,MAAO,CAAEC,UAAU,SACtB,oCACA,wBAAIb,UAAU,WACXO,EAAKO,KAAI,SAAAC,GAAG,OACX,wBAAIC,IAAKD,EAAG,OACV,kBAAC,IAAD,CAAME,GAAE,SAAWC,oBAAUH,GAArB,KAA+BA,SAK7C,UA+CDI,UA/BE,SAAC,GAAc,IACNC,EADK,EAAXC,KACVC,eAER,OACE,kBAAC,IAAD,KACE,kBAAClB,EAAD,CACEL,QAASqB,EAAKG,KACdlB,iBAAkBP,IAClBQ,YAAac,EAAKI,YAAYlB,YAC9BG,OACE,kBAAC,IAAD,CAAQgB,cAAc,aACpB,kCAAWL,EAAKI,YAAYhB,OAC5B,0BACEkB,KAAK,cACL3B,QAAO,GAAKqB,EAAKI,YAAYlB,eAInCC,KAAMa,EAAKI,YAAYjB,KACvBC,MAAOY,EAAKI,YAAYhB,UAczB,IAAMmB,EAAS","file":"component---src-templates-blog-post-js-4be2910ffa49f94e4473.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.node,\n  className: PropTypes.string\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { kebabCase } from \"lodash\"\nimport Helmet from \"react-helmet\"\nimport { graphql, Link } from \"gatsby\"\nimport Layout from \"../components/Layout\"\nimport Content, { HTMLContent } from \"../components/Content\"\n\nexport const BlogPostTemplate = ({\n  content,\n  contentComponent,\n  description,\n  tags,\n  title,\n  helmet\n}) => {\n  const PostContent = contentComponent || Content\n\n  return (\n    <section className=\"section\">\n      {helmet || \"\"}\n      <div className=\"container content\">\n        <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light\">\n              {title}\n            </h1>\n            <p>{description}</p>\n            <PostContent content={content} />\n            {tags && tags.length ? (\n              <div style={{ marginTop: `4rem` }}>\n                <h4>Tags</h4>\n                <ul className=\"taglist\">\n                  {tags.map(tag => (\n                    <li key={tag + `tag`}>\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                    </li>\n                  ))}\n                </ul>\n              </div>\n            ) : null}\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nBlogPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  contentComponent: PropTypes.func,\n  description: PropTypes.string,\n  title: PropTypes.string,\n  helmet: PropTypes.object\n}\n\nconst BlogPost = ({ data }) => {\n  const { markdownRemark: post } = data\n\n  return (\n    <Layout>\n      <BlogPostTemplate\n        content={post.html}\n        contentComponent={HTMLContent}\n        description={post.frontmatter.description}\n        helmet={\n          <Helmet titleTemplate=\"%s | Blog\">\n            <title>{`${post.frontmatter.title}`}</title>\n            <meta\n              name=\"description\"\n              content={`${post.frontmatter.description}`}\n            />\n          </Helmet>\n        }\n        tags={post.frontmatter.tags}\n        title={post.frontmatter.title}\n      />\n    </Layout>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object\n  })\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  query BlogPostByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        description\n        tags\n      }\n    }\n  }\n`\n"],"sourceRoot":""}