{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["IndexPage","render","posts","this","props","data","allMarkdownRemark","edges","className","map","post","node","style","border","padding","key","id","to","fields","slug","frontmatter","title","date","tags","tag","kebabCase","description","excerpt","React","Component","pageQuery"],"mappings":"qPAMqBA,E,gLACnBC,OAAA,WAAU,IAEOC,EADEC,KAAKC,MAAdC,KACsBC,kBAAtBC,MAER,OACE,kBAAC,IAAD,KACE,6BAASC,UAAU,WACjB,yBAAKA,UAAU,aACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,kCAAd,6BAIDN,EAAMO,KAAI,gBAASC,EAAT,EAAGC,KAAH,OACT,yBACEH,UAAU,UACVI,MAAO,CAAEC,OAAQ,iBAAkBC,QAAS,WAC5CC,IAAKL,EAAKM,IAEV,2BACE,kBAAC,IAAD,CAAMR,UAAU,mBAAmBS,GAAIP,EAAKQ,OAAOC,MAChDT,EAAKU,YAAYC,OAEpB,yCACA,+BAAQX,EAAKU,YAAYE,MACzB,yCACCZ,EAAKU,YAAYG,KAAKd,KAAI,SAAAe,GAAG,OAC5B,0BAAMT,IAAKS,EAAG,MAAUZ,MAAO,CAAEE,QAAS,SACxC,kBAAC,IAAD,CAAMG,GAAE,SAAWQ,oBAAUD,GAArB,KAA+BA,QAI7C,2BACGd,EAAKU,YAAYM,YACdhB,EAAKU,YAAYM,YACjBhB,EAAKiB,QACT,6BACA,6BACA,kBAAC,IAAD,CAAMnB,UAAU,kBAAkBS,GAAIP,EAAKQ,OAAOC,MAAlD,2B,GAvCqBS,IAAMC,WA4DhCC,EAAS","file":"component---src-pages-index-js-c760205e77630d459d4b.js","sourcesContent":["import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Link, graphql } from \"gatsby\"\nimport { kebabCase } from \"lodash\"\nimport Layout from \"../components/Layout\"\n\nexport default class IndexPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const { edges: posts } = data.allMarkdownRemark\n\n    return (\n      <Layout>\n        <section className=\"section\">\n          <div className=\"container\">\n            <div className=\"content\">\n              <h3 className=\"has-text-weight-bold is-size-3\">\n                Food, Travel, &amp; Thoughts\n              </h3>\n            </div>\n            {posts.map(({ node: post }) => (\n              <div\n                className=\"content\"\n                style={{ border: \"1px solid #333\", padding: \"2em 4em\" }}\n                key={post.id}\n              >\n                <p>\n                  <Link className=\"has-text-primary\" to={post.fields.slug}>\n                    {post.frontmatter.title}\n                  </Link>\n                  <span>&nbsp;&nbsp; | &nbsp;&nbsp;</span>\n                  <small>{post.frontmatter.date}</small>\n                  <span>&nbsp;&nbsp; | &nbsp;&nbsp;</span>\n                  {post.frontmatter.tags.map(tag => (\n                    <span key={tag + `tag`} style={{ padding: \"10px\" }}>\n                      <Link to={`/tags/${kebabCase(tag)}/`}>{tag}</Link>\n                    </span>\n                  ))}\n                </p>\n                <p>\n                  {post.frontmatter.description\n                    ? post.frontmatter.description\n                    : post.excerpt}\n                  <br />\n                  <br />\n                  <Link className=\"button is-small\" to={post.fields.slug}>\n                    Keep Reading â†’\n                  </Link>\n                </p>\n              </div>\n            ))}\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nIndexPage.propTypes = {\n  data: PropTypes.shape({\n    allMarkdownRemark: PropTypes.shape({\n      edges: PropTypes.array\n    })\n  })\n}\n\nexport const pageQuery = graphql`\n  query IndexQuery {\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___date] }\n      filter: { frontmatter: { templateKey: { eq: \"blog-post\" } } }\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            templateKey\n            date(formatString: \"MMMM DD, YYYY\")\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}